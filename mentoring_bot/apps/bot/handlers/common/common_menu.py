from aiogram import Dispatcher, Router, types, F
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.types import FSInputFile

from mentoring_bot.apps.bot.callback_data.base_callback import EvaluationCallback
from mentoring_bot.apps.bot.filters.base_filters import UserFilter
from mentoring_bot.apps.bot.handlers.temp import file_ids
from mentoring_bot.apps.bot.handlers.utils import create_deferred_message, create_evaluation_message
from mentoring_bot.apps.bot.markups.common import common_markups
from mentoring_bot.config.config import MEDIA_DIR
from mentoring_bot.db.models import User, Evaluation
from mentoring_bot.loader import _

router = Router()


async def start(message: types.Message | types.CallbackQuery, new_user: bool, state: FSMContext):
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await state.clear()
    if isinstance(message, types.CallbackQuery):
        message = message.message
    if new_user:
        # —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await create_deferred_message(message.from_user.id)
        await create_evaluation_message(message.from_user.id)

    await message.answer(_("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—É –¥–∏–∑–∞–π–Ω–∞ –°–µ–º–µ–Ω–∞ –†–æ–º–∞–Ω—é–∫–∞! "
                           "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –Ω–∞ –Ω–∞—à–µ–º –∫—É—Ä—Å–µ –ø–æ UI/UX –¥–∏–∑–∞–π–Ω—É. "
                           "–í —ç—Ç–æ–º –±–æ—Ç–µ –º—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –æ–Ω–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏–π, "
                           "–∞ —Ç–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"),
                         reply_markup=common_markups.menu())


async def menu(call: types.CallbackQuery, state: FSMContext):
    await state.clear()
    # await call.message.edit_reply_markup(common_markups.menu())
    await call.message.answer(_("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), reply_markup=common_markups.menu())


async def schedule(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    program = "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞.pdf"
    if program in file_ids:
        await message.answer_document(file_ids[program])
    else:
        await message.answer("–í–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 13.06.2022 \n\n"
                             "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –º–æ–¥—É–ª—è–º –∫—É—Ä—Å–∞:\n\n"
                             "‚óæÔ∏è 13.06 ‚Äì –º–æ–¥—É–ª—å 1 (—Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ)\n"
                             "‚óæÔ∏è 16.06 ‚Äì —Ä–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞\n"
                             "‚óæÔ∏è 20.06 ‚Äì –º–æ–¥—É–ª—å 2 (—Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ)\n"
                             "‚óæÔ∏è 23.06 ‚Äì —Ä–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞\n"
                             "‚óæÔ∏è 27.06 ‚Äì –º–æ–¥—É–ª—å 3 (—Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ)\n"
                             "‚óæÔ∏è 30.06 ‚Äì —Ä–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞\n"
                             "‚óæÔ∏è 04.07 ‚Äì –º–æ–¥—É–ª—å 4 (—Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ)\n"
                             "‚óæÔ∏èÔ∏è 07.07 ‚Äì —Ä–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞\n"
                             "‚óæÔ∏è 11.07 ‚Äì –º–æ–¥—É–ª—å 5 (—Ç–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ)\n\n"
                             "–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ –Ω–∏–∂–µüëá \n")
        message = await message.answer_document(FSInputFile(MEDIA_DIR / "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞.pdf"))
        file_ids[program] = message.document.file_id


async def news(message: types.Message):
    """–ù–æ–≤–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è"""
    await message.answer("–ú—ã –±—É–¥–µ–º –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–∞–º—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤–∞–º –≤ –Ω–∞—à —á–∞—Ç-–±–æ—Ç,"
                         "–∞ –ø–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–º –Ω–æ–≤–æ—Å—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µüëá\n\n"
                         "https://t.me/+D_316ATKGxdiMTVi")


async def teacher(message: types.Message):
    """–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º"""
    await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –ø–æ —Å—Å—ã–ª–∫–µ, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π –Ω–∏–∂–µ.\n "
                         "–†–∞–±–æ—á–∏–µ —á–∞—Å—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –æ—Ç–≤–µ—Ç–∞–º —É—á–µ–Ω–∏–∫–∞–º:\n"
                         "–ü–ù-–ü–¢ —Å 12:00 –¥–æ 18:00\n "
                         "–°–ë-–í–°–ö ‚Äì –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏\n "
                         "–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º üëá\n "
                         "https://t.me/soultip ")


async def knowledge(message: types.Message):
    """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π"""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –±–∞–∑—É", reply_markup=common_markups.knowledge())


async def lessons(message: types.Message):
    """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–∫–∏"""
    await message.answer("–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=common_markups.lessons())


async def evaluation_process(call: types.CallbackQuery, user: User, callback_data: EvaluationCallback, state: FSMContext):
    point = callback_data.point
    await user.fetch_related("evaluation")
    await call.message.delete()
    if user.evaluation:
        user.evaluation.point = point
        await user.evaluation.save()
        await call.message.answer("–û—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        await Evaluation.create(user=user, point=point)
        await call.message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.")


def register_common(dp: Dispatcher):
    dp.include_router(router)

    callback = router.callback_query.register
    message = router.message.register

    message(start, UserFilter(), commands="start", state="*")
    # callback(start, UserFilter(), text="menu", state="*")
    callback(menu, UserFilter(), text="menu", state="*")
    message(schedule, F.text.lower() == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    message(news, F.text.lower() == "–Ω–æ–≤–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è")
    message(teacher, F.text.lower() == "—Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º")
    message(knowledge, F.text.lower() == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π")
    message(lessons, F.text.lower() == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Ä–æ–∫–∏")
    callback(evaluation_process, UserFilter(), EvaluationCallback.filter())
